options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: iot
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: RollJam
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: freq
  id: variable
  parameters:
    comment: ''
    value: 43392e4
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 20.0]
    rotation: 0
    state: enabled
- name: jam
  id: variable
  parameters:
    comment: ''
    value: 43370e4
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 20.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '2000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [304, 20.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    showports: 'False'
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 172.0]
    rotation: 0
    state: enabled
- name: band_pass_filter_0
  id: band_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    decim: '1'
    gain: '1'
    high_cutoff_freq: 50e4
    interp: '1'
    low_cutoff_freq: 1e3
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: 5e3
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 424.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 452.0]
    rotation: 0
    state: enabled
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: C:\Users\samue\Desktop\temp\signal.raw
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'True'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 744.0]
    rotation: 0
    state: disabled
- name: blocks_file_source_0_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: C:\Users\Andrea\Downloads\signal2.raw
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'True'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 948.0]
    rotation: 0
    state: disabled
- name: blocks_threshold_ff_0
  id: blocks_threshold_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    high: '0.009'
    init: '0'
    low: '0.009'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 376.0]
    rotation: 0
    state: enabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 796.0]
    rotation: 0
    state: disabled
- name: blocks_throttle2_0_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 948.0]
    rotation: 0
    state: disabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport time\n\n\nclass blk(gr.sync_block):\n\n  def\
      \ __init__(self, first_sink=\"signal.raw\", second_sink=\"signal2.raw\"):\n\
      \    gr.sync_block.__init__(\n      self,\n      name='Embedded Python Block',\n\
      \      in_sig=[np.complex64, np.complex64, np.float32],\n      out_sig=[np.complex64]\n\
      \    )\n    self.first_signal = None\n    self.second_signal = None\n    self.first_sink\
      \ = open(first_sink, 'w+b')\n    self.second_sink = open(second_sink, 'w+b')\n\
      \    self.first_signal_captured = False\n    self.detected = False\n    self.transmit\
      \ = False\n    self.finished = False\n    self.timer = 0\n\n  def work(self,\
      \ input_items, output_items):\n    input_jam = input_items[0] # Jamming signal\n\
      \    input_sig = input_items[1] # Captured signal\n    input_detect = input_items[2]\
      \ # Signal detection\n\n    if not self.finished:\n      output_items[0][:]\
      \ = 0 if self.first_signal_captured else input_jam\n      if self.detected:\n\
      \        if not self.first_signal_captured:\n          self.first_signal = np.concatenate((self.first_signal,\
      \ input_sig))\n        else:\n          self.second_signal = np.concatenate((self.second_signal,\
      \ input_sig))\n        if int(round(time.time() * 1000)) - self.timer >= 1000:\n\
      \          print('Signal captured')\n          if self.first_signal_captured:\n\
      \            self.second_sink.write(bytearray(self.second_signal))\n       \
      \     self.first_sink.close()\n            self.second_sink.close()\n      \
      \      self.finished = True\n          else:\n              self.first_sink.write(bytearray(self.first_signal))\n\
      \              self.first_sink.close()\n          self.detected = False\n  \
      \        self.first_signal_captured = True\t\t\t\t\t\n      elif 1 in input_detect:\n\
      \        if not self.first_signal_captured:\n          self.first_signal = input_sig\n\
      \        else:\n          self.second_signal = input_sig\n          self.transmit\
      \ = True\n        self.timer = int(round(time.time() * 1000))\n        self.detected\
      \ = True\n\n    # Trasmit the first signal\n    elif len(self.first_signal)\
      \ > 0:\n      self.first_signal = self.send_signal(self.first_signal, output_items)\n\
      \n    # Trasmit the second signal\n    elif len(self.second_signal) > 0:\n \
      \     self.second_signal = self.send_signal(self.second_signal, output_items)\n\
      \    \n    return len(output_items[0])\n  \n  def send_signal(self, signal,\
      \ output_items):\n    if(len(signal) < len(output_items[0])):\n      output_items[0][:len(signal)]\
      \ = signal\n      signal = []\n    else:\n      output_items[0][:] = signal[:len(output_items[0])]\n\
      \      signal = signal[len(output_items[0]):]\n    return signal"
    affinity: ''
    alias: ''
    comment: ''
    first_sink: '''signal.raw'''
    maxoutbuf: '0'
    minoutbuf: '0'
    second_sink: '''signal2.raw'''
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('first_sink', "'signal.raw'"), ('second_sink',
      "'signal2.raw'")], [('0', 'complex', 1), ('1', 'complex', 1), ('2', 'float',
      1)], [('0', 'complex', 1)], '', ['first_sink', 'second_sink'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1232, 220.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: jam
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1528, 376.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: freq
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 536.0]
    rotation: 0
    state: enabled
- name: soapy_hackrf_sink_0_0
  id: soapy_hackrf_sink
  parameters:
    affinity: ''
    alias: ''
    amp: 'False'
    bandwidth: '0'
    center_freq: jam
    comment: ''
    dev_args: ''
    samp_rate: samp_rate
    type: fc32
    vga: '47'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1576, 220.0]
    rotation: 0
    state: enabled
- name: soapy_hackrf_sink_0_0_0
  id: soapy_hackrf_sink
  parameters:
    affinity: ''
    alias: ''
    amp: 'False'
    bandwidth: '0'
    center_freq: freq
    comment: ''
    dev_args: ''
    samp_rate: samp_rate
    type: fc32
    vga: '47'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [880, 820.0]
    rotation: 0
    state: disabled
- name: soapy_hackrf_sink_0_0_0_0
  id: soapy_hackrf_sink
  parameters:
    affinity: ''
    alias: ''
    amp: 'False'
    bandwidth: '0'
    center_freq: freq
    comment: ''
    dev_args: ''
    samp_rate: samp_rate
    type: fc32
    vga: '47'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 980.0]
    rotation: 0
    state: disabled
- name: soapy_rtlsdr_source_0
  id: soapy_rtlsdr_source
  parameters:
    affinity: ''
    agc: 'False'
    alias: ''
    bias: 'False'
    bufflen: '16384'
    center_freq: freq
    comment: ''
    dev_args: ''
    freq_correction: '0'
    gain: '20'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [80, 388.0]
    rotation: 0
    state: enabled

connections:
- [analog_sig_source_x_0, '0', epy_block_1, '0']
- [band_pass_filter_0, '0', blocks_complex_to_mag_squared_0, '0']
- [band_pass_filter_0, '0', qtgui_freq_sink_x_0_0, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_threshold_ff_0, '0']
- [blocks_file_source_0, '0', blocks_throttle2_0, '0']
- [blocks_file_source_0_0, '0', blocks_throttle2_0_0, '0']
- [blocks_threshold_ff_0, '0', epy_block_1, '2']
- [blocks_throttle2_0, '0', soapy_hackrf_sink_0_0_0, '0']
- [blocks_throttle2_0_0, '0', soapy_hackrf_sink_0_0_0_0, '0']
- [epy_block_1, '0', qtgui_freq_sink_x_0, '0']
- [epy_block_1, '0', soapy_hackrf_sink_0_0, '0']
- [soapy_rtlsdr_source_0, '0', band_pass_filter_0, '0']
- [soapy_rtlsdr_source_0, '0', epy_block_1, '1']

metadata:
  file_format: 1
  grc_version: 3.10.10.0
